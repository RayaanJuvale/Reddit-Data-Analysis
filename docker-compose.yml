version: "3.8"

services:
  db:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Ensure init.sql runs on container start
    healthcheck: # Add health check for better orchestration
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  etl:
    build:
      context: .
    container_name: etl
    depends_on:
      db:
        condition: service_healthy # Wait for the database to be ready
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    command: ["sh", "-c", "while :; do python reddit_etl.py; sleep 300; done"] # Keep the ETL running in a loop
    networks:
      - app-network

  streamlit:
    build:
      context: .
    container_name: streamlit
    depends_on:
      db:
        condition: service_healthy # Wait for the database to be ready
    ports:
      - "8501:8501"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_NAME: ${POSTGRES_DB}
    command: ["streamlit", "run", "app.py", "--server.port=8501", "--server.address=0.0.0.0"]
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
